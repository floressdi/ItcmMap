import Head from "next/head";
import { Geist, Geist_Mono } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { Canvas } from "@react-three/fiber";
import { OrbitControls, Environment } from "@react-three/drei";
import { Suspense } from "react";
import { useState } from "react";
import ModelCampus2 from "./ModelCampus2";
import ModelCampus1 from "./ModelCampus1";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function Home() {
  const [modeloActivo, setModeloActivo]= useState("modelocampus1");
  
  const cambiarModelo=()=>{
    setModeloActivo( (prev) =>(prev=== "modelocampus1" ? "modelocampus2" : "modelocampus1"));
  }
  return (
    <>
      <Head>
        <title>MAPATEC</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
      >
        <button className={styles.btncambio} onClick={cambiarModelo}>
          <p>CAMBIAR CAMPUS</p>
        </button>

        <main className={styles.main}>
          <Canvas key={modeloActivo} style={{ width: "200vh", height: "100vh" }}>
            <Suspense fallback={null}>
            {/* Renderizado condicional*/}
              {modeloActivo==="modelocampus1" ? <ModelCampus1/>:<ModelCampus2/>}

            </Suspense>
            {/* Luces */}
            <ambientLight intensity={1} />

            <directionalLight position={[5, 10, 5]} intensity={1} />

            {/* Controles de cámara */}
            <OrbitControls
              minAzimuthAngle={-Math.PI / 3}
              maxAzimuthAngle={Math.PI / 3}
              minDistance={15}
              maxDistance={50}
              enablePan={true}
              minPolarAngle={Math.PI / 4}
              maxPolarAngle={Math.PI - Math.PI / 2}
              screenSpacePanning={false}
            />
            {/* Ambiente para mejorar la iluminación */}
            <Environment preset="sunset"/> 
          </Canvas>
        </main>
      </div>
    </>
  );
}
